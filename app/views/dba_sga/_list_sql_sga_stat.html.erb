<%= render_page_caption("#{t(:dba_sga_list_sql_sga_stat_caption, :default=>'Statement details of current SGA from')} #{@modus}: Instance = #{@sql.inst_id}, SQL-ID = '#{@sql.sql_id}'#{", Child-No. = #{@sql.child_number}" if @modus=='GV$SQL'} ", get_recall_params_info_for_render_page_caption) %>

<% @table_id_prefix = get_unique_area_id %>

<%
# Anzeige sowohl des konkreten Wertes als auch je Execution in zwei TD-Abschnitten
def show_both_values(name, param, decimals, title="", show_per_result_row=false)
  param     = param.to_f   # Sicherstellen Typ
  execs     = @sql.executions.to_i     == 0 ? 1 : @sql.executions.to_i;         # Suppress division by 0

  if show_per_result_row && @sql.rows_processed.to_i > 0                        # Suppress division by 0
    per_res_row = "\n#{formattedNumber(param/@sql.rows_processed.to_i, decimals+2)} per result row"
  else
    per_res_row = ''
  end

  "<tr>
     <td title='#{title}'>#{name}</td>
     <td align='right' title='#{title}#{per_res_row}'>#{formattedNumber(param,decimals)}</td>
     <td align='right' title='#{title} #{t(:per_execution, :default=>'per execution')}#{per_res_row}'>#{formattedNumber( (param/execs),(decimals+2))}</td>
   </tr>".html_safe
end

# Anzeige des konkreten Wertes ohne je Execution in zwei TD-Abschnitten
def show_single_value(name, param, decimals, title="")
  "<tr><td title='#{title}'>#{name}</td>
     <td align='right' title='#{title}'>#{formattedNumber(param,decimals)}</td>
     <td align='center'>-</td>
   </tr>".html_safe
end
%>
<table ID="<%= @table_id_prefix %>_main" border="0">
  <tr>
    <td valign="top"><pre id="<%= "#{@table_id_prefix}_sql" %>" class="monospace" style="overflow-y: auto;"><%= convert_word_wrap_comma(format_sql(@sql_statement)) %></pre></td>
    <td valign="top">
      <table id="<%= "#{@table_id_prefix}_right_single_table" %>" border="1" width="100%" style="font-size:small;">
        <tr title="Parsing schema name">            <td>Parsing schema name</td><td align="center"><%= @sql.parsing_schema_name %></td>        </tr>
        <tr title="Plan hash value (identifies unique execution plan)">            <td>Plan-Hash-Value</td><td align="center"><%= @sql.plan_hash_value %></td>        </tr>
        <% if @modus == "GV$SQL" %>
            <tr title="Child address (identifies child record in gv$SQL)">            <td>Child-address</td><td align="center"><%= @sql.child_address %></td>        </tr>
        <% else %>
            <tr title="<%= t(:dba_sga_list_sql_sga_stat_child_count_hint, :default=>'Number of child cursors')%>"> <td>Child-cursors</td><td align="center"><%= @sql.child_count %></td>        </tr>
        <% end %>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_opt_env_hint, :default=>'Hash value over optimizer environment') %>">            <td>Optimizer Env Hash-Value</td><td align="center"><%= @sql.optimizer_env_hash_value %></td>        </tr>
        <tr title="Module of parsing session">            <td>Parsing module</td><td align="center">
          <%=
            @update_area_module = get_unique_area_id
            ajax_link(@sql.module, {
                :action        => :show_application_info,
                :update_area  => @update_area_module,
                :org_text     => @sql.module
            },
                      :title=>t(:dba_sga_list_sql_sga_stat_module_link_hint, :default=>'Show further details for module name if available'))
          %>
          <div id='<%= @update_area_module %>'></div>
        </td>        </tr>
        <tr title="Action of parsing session">            <td>Parsing action</td><td align="center">
          <%=
            @update_area_action = get_unique_area_id
            ajax_link(@sql.action, {
                :action        => :show_application_info,
                :update_area  => @update_area_action,
                :org_text     => @sql.action
            },
                      :title=>t(:dba_sga_list_sql_sga_stat_action_link_hint, :default=>'Show further details for action name if available'))
          %>
          <div id='<%= @update_area_action %>'></div>
        </td>        </tr>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_object_state_hint, :default=>'Object status of SQL') %>">            <td>Object status</td><td align="center"><%= @sql.object_status %></td>        </tr>
        <tr title="<%= "#{t(:dba_sga_list_sql_sga_stat_plsql_hint, :default=>'Program name and line number if SQL is executed within PL/SQL')}\nType=#{@sql.program_type}\nLast DDL=#{localeDateTime(@sql.program_last_ddl_time)}" %>">            <td><%= t(:dba_sga_list_sql_sga_stat_plsql_caption, :default=>'PL/SQL program / line') %></td><td align="center"><%= "#{@sql.program_name} : #{fn(@sql.program_lineno)}" %></td>        </tr>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_first_load_hint, :default=>'First occurrence of SQL in SGA') %>">            <td>First Load Time</td><td align="center"><%= @sql.first_load_time %></td>        </tr>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_last_load_hint, :default=>'Last load time of SQL in SGA, this is start time for cumulative statistics in SGA') %>">            <td>Last Load Time</td><td align="center"><%= @sql.last_load_time %></td>        </tr>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_last_active_hint, :default=>'End of last execution of SQL') %>">            <td>Last Active Time</td><td align="center"><%= @sql.last_active_time %></td>        </tr>
        <tr title="<%= t(:dba_sga_list_sql_sga_stat_hit_ration_hint, :default=>'Ratio cache hits to buffer gets') %>">            <td>Buffer cache hit ratio</td><td align="center"><%= fn(@sql.hit_ratio, 2) %></td>        </tr>
        <tr title="Number of times the object was loaded or reloaded after invalidisation of cursor">            <td>Loads</td><td align="center"><%= fn(@sql.loads) %></td>        </tr>
      </table>

       <table id="<%= "#{@table_id_prefix}_right_table" %>" border="1" width="100%" style="font-size:small;">
         <tr><th>Metric-Name</th><th>Total</th><th>Per Exec.</th></tr>
         <%= show_single_value("Executions", @sql.executions,0, "Number of executions") %>
         <%= show_both_values("Parse calls", @sql.parse_calls,0, "Number of parse calls", true) %>
         <%= show_both_values("Fetches ", @sql.fetches, 0, "Number of fetches (Avg. #{@sql.rows_processed/@sql.fetches rescue nil} rows per fetch)")%>
         <%= show_both_values("Sorts", @sql.sorts,0, "Number of sort operations") %>
         <%= show_both_values("Rows processed", @sql.rows_processed,0, "Number of rows processed") %>
         <%= show_both_values("Buffer gets", @sql.buffer_gets,0, t(:dba_sga_list_sql_sga_stat_buffer_gets_hint, :default=>'Number of DB blocks read total'), true) %>
         <%= show_both_values("Disk reads", @sql.disk_reads,0, "Number of db blocks read from disk\nAvg. time per db block read from disk = #{fn((@sql.disk_reads>0 ? @sql.user_io_wait_time_secs*1000.0/@sql.disk_reads : 0),2)} ms\nAvg. disk transfer speed = #{fn((@sql.user_io_wait_time_secs>0 ? @sql.disk_reads * get_db_block_size / (1024*1024) / @sql.user_io_wait_time_secs : 0),2)} MB/sec. (per single session if using PQ) ", true) %>
         <%= show_both_values("Elapsed Time (sec), incl. parallel Query Slaves", @sql.elapsed_time_secs,2, t(:dba_sga_list_sql_sga_stat_elapsed_hint, :default=>'Total elapsed time in seconds, sum over all PQ-slaves if executed in parallel'), true)%>
         <%= show_both_values("CPU-Time (sec)", @sql.cpu_time_secs, 2, t(:dba_sga_list_sql_sga_stat_cpu_hint, :default=>'CPU time in seconds, sum over all PQ-slaves if executed in parallel'), true) %>
         <%= show_both_values("Application Wait Time (sec)", @sql.application_wait_time_secs, 2, "Application wait time total, includes row lock waits", true) %>
         <%= show_both_values("Concurrency Wait Time (sec)", @sql.concurrency_wait_time_secs, 2, "Concurrency wait time", true) %>
         <%= show_both_values("Cluster Wait Time (sec)", @sql.cluster_wait_time_secs, 2, 'Wait time caused by RAC cluster issues', true) %>
         <%= show_both_values("User-IO Wait Time (sec)", @sql.user_io_wait_time_secs, 2, 'Wait time caused by I/O operations', true) %>
         <%= show_both_values("PL/SQL Exec Time (sec)", @sql.plsql_exec_time_secs, 2, t(:dba_sga_list_sql_sga_stat_plsql_time_hint, :default=>'PL/SQL execution time in seconds, part of CPU-time'), true) %>
       </table>
     </td>
   </tr>
</table>

<script type="application/javascript">
  // set height of sql (left column) to height of right column
  jQuery("#<%= "#{@table_id_prefix}_sql" %>").height(jQuery("#<%= "#{@table_id_prefix}_right_single_table"%>").height() + jQuery("#<%= "#{@table_id_prefix}_right_table"%>").height());
  jQuery("#<%= "#{@table_id_prefix}_main" %>").resizable({
      handles: 's',
      resize: function( event, ui ) {
              jQuery("#<%= "#{@table_id_prefix}_sql" %>").height(jQuery("#<%= "#{@table_id_prefix}_main"%>").height()-30);
      },
      stop: function( event, ui ) {
          jQuery("#<%= "#{@table_id_prefix}_sql" %>").height(jQuery("#<%= "#{@table_id_prefix}_main"%>").height()-10);
      }
  });
</script>