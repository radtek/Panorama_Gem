<%
   @update_area = get_unique_area_id if !defined?(@update_area) || @update_area.nil?  # Kann auch durch Aufrufer vorbelegt sein

  def link_column(rec, value)
    if @modus == "GV$SQL" || rec.child_count == 1    # Es kann direkt auch Child-Cursor verwiesen werden
        link_sql_id(@update_area, rec.inst_id, rec.sql_id, rec.child_number, rec.parsing_schema_name, rec.object_status, rec.child_address)
    else
        link_sql_id(@update_area, rec.inst_id, rec.sql_id, nil, rec.parsing_schema_name, rec.object_status)
    end
  end

  column_options = []
  column_options << {:caption=>"I",           :data=>proc{|rec| formattedNumber(rec.inst_id)},                         :title=>"Instance-ID"}
  column_options << {:caption=>"SQL-ID",      :data=>proc{|rec| link_column(rec, rec.sql_text)},                       :title=>"SQL-ID"}
  column_options << {:caption=>"SQL-Text",    :data=>proc{|rec| my_html_escape rec.sql_text},                          :title=>"SQL-Text", :data_title=>'SQL_ID=#{rec.sql_id} : #{my_html_escape(rec.full_sql_text.strip)}'}
  column_options << {:caption=>"C",    :data=>proc{|rec| rec.child_number},                            :title=>"Child-Number", :data_title=>proc{|rec| "%t,\nChild-address = '#{rec.child_address}'"}} if @modus=="GV$SQL"
  column_options << {:caption=>"C",    :data=>proc{|rec| rec.child_count},                             :title=>"Anzahl Child-Cursoren"} if @modus=="GV$SQLArea"
  column_options << {:caption=>"P",           :data=>proc{|rec| rec.plans },                                           :title=>"Number of different execution plans in SGA of instance for this SQL_ID",  :align=>:right, :data_style=>proc{|rec| 'background-color:coral;' if rec.plans > 1 }  }
  column_options << {:caption=>"Plan hash value", :data=>proc{|rec| rec.plan_hash_value},                              :title=>"Plan hash value (unique hash value for execution plan)", :align=>:right}    if @modus=="GV$SQL"
  column_options << {:caption=>"Last active", :data=>proc{|rec| localeDateTime(rec.last_active_time)},                 :title=>"Last active time" }
  column_options << {:caption=>"User",        :data=>proc{|rec| rec.username },                                        :title=>"User who originally built this child cursor" }
  column_options << {:caption=>"Parse",       :data=>proc{|rec| rec.parsing_schema_name},                              :title=>"Parsing schema name that was used to originally build this child cursor" }
  column_options << {:caption=>"Execs",       :data=>proc{|rec| formattedNumber(rec.executions)},                      :title=>'Number of executions', :align=>"right"}
  column_options << {:caption=>"Elapsed",     :data=>proc{|rec| formattedNumber(rec.elapsed_time_secs)},               :title=>"Total elapsed time in Sec.", :align=>"right"}
  column_options << {:caption=>"Ela./Ex.",    :data=>proc{|rec| formattedNumber(rec.elapsed_time_secs_per_execute,4)}, :title=>"elapsed time per execute in Sec. (incl. parallel Query Slaves)", :align=>"right"}
  column_options << {:caption=>"CPU",         :data=>proc{|rec| formattedNumber(rec.cpu_time_secs)},                   :title=>"CPU-time in seconds", :align=>"right"}
  column_options << {:caption=>"Disk Reads",  :data=>proc{|rec| formattedNumber(rec.disk_reads)},                      :title=>"Total Disk Reads", :align=>"right"}
  column_options << {:caption=>"Disk/Ex.",    :data=>proc{|rec| formattedNumber(rec.disk_reads_per_execute)},          :title=>"Disk Reads per Execute", :align=>"right"}
  column_options << {:caption=>"Buffer Gets", :data=>proc{|rec| formattedNumber(rec.buffer_gets)},                     :title=>"Total Buffer Gets", :align=>"right"}
  column_options << {:caption=>"Buffer/Ex.",  :data=>proc{|rec| formattedNumber(rec.buffer_gets_per_exec)},            :title=>"Buffer Gets per execute", :align=>"right"}
  column_options << {:caption=>"Rows proc.",  :data=>proc{|rec| formattedNumber(rec.rows_processed)},                  :title=>"Number of rows processed", :align=>"right"}
  column_options << {:caption=>"Rows/Ex.",    :data=>proc{|rec| formattedNumber(rec.rows_processed_per_execute)},      :title=>"Number of rows processed per execute", :align=>"right"}
  column_options << {:caption=>"Parses",      :data=>proc{|rec| formattedNumber(rec.parse_calls)},                     :title=>"Total number of parse calls", :data_title=>proc{|rec| "%t, #{formattedNumber(rec.executions.to_f/rec.parse_calls,2) if rec.parse_calls > 0} executions per parse call"},  :align=>"right"}
  column_options << {:caption=>"Status",      :data=>proc{|rec| rec.object_status},                                    :title=>"Object-Status"}
  column_options << {:caption=>"Memory (KB)", :data=>proc{|rec| fn((rec.sharable_mem+rec.persistent_mem+rec.runtime_mem)/1024.0,2)},  :title=>"Sharable memory + persistent memory + runtime memory in kBytes", :align=>:right, :data_title=>proc{|rec| "%t: Sharable memory = #{fn(rec.sharable_mem/1024.0)} kB, persistent memory = #{fn(rec.persistent_mem/1024.0)} kB, runtime memory = #{fn(rec.runtime_mem/1024.0)} kB"}}

%>



<%= gen_slickgrid(@sqls, column_options, {
        :caption => "#{t(:dba_sga_list_sql_area_caption, :default=>'SQL of current SGA from %{modus}, grouped by', :modus=>@modus)}  #{if @modus == "GV$SQL";  "SQL-ID, Child-Number, Child_Address" else "SQL-ID" end }#{", SQL-ID='#{@sql_id}'" if @sql_id}#{", Filter='#{@filter}'" if @filter}",
        :max_height => 450
}) %>

<div id="<%= @update_area %>" style="float:left; width:100%;">
</div>
